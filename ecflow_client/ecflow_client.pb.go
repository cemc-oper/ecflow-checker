// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ecflow_client.proto

package ecflow_client

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ResponseStatus struct {
	HasError             bool     `protobuf:"varint,1,opt,name=has_error,json=hasError,proto3" json:"has_error,omitempty"`
	ErrorString          string   `protobuf:"bytes,2,opt,name=error_string,json=errorString,proto3" json:"error_string,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResponseStatus) Reset()         { *m = ResponseStatus{} }
func (m *ResponseStatus) String() string { return proto.CompactTextString(m) }
func (*ResponseStatus) ProtoMessage()    {}
func (*ResponseStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_1510f1a05cee58cd, []int{0}
}

func (m *ResponseStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseStatus.Unmarshal(m, b)
}
func (m *ResponseStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseStatus.Marshal(b, m, deterministic)
}
func (m *ResponseStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseStatus.Merge(m, src)
}
func (m *ResponseStatus) XXX_Size() int {
	return xxx_messageInfo_ResponseStatus.Size(m)
}
func (m *ResponseStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseStatus.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseStatus proto.InternalMessageInfo

func (m *ResponseStatus) GetHasError() bool {
	if m != nil {
		return m.HasError
	}
	return false
}

func (m *ResponseStatus) GetErrorString() string {
	if m != nil {
		return m.ErrorString
	}
	return ""
}

type StatusRequest struct {
	Owner                string   `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"`
	Repo                 string   `protobuf:"bytes,2,opt,name=repo,proto3" json:"repo,omitempty"`
	Host                 string   `protobuf:"bytes,3,opt,name=host,proto3" json:"host,omitempty"`
	Port                 string   `protobuf:"bytes,4,opt,name=port,proto3" json:"port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StatusRequest) Reset()         { *m = StatusRequest{} }
func (m *StatusRequest) String() string { return proto.CompactTextString(m) }
func (*StatusRequest) ProtoMessage()    {}
func (*StatusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1510f1a05cee58cd, []int{1}
}

func (m *StatusRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatusRequest.Unmarshal(m, b)
}
func (m *StatusRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatusRequest.Marshal(b, m, deterministic)
}
func (m *StatusRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatusRequest.Merge(m, src)
}
func (m *StatusRequest) XXX_Size() int {
	return xxx_messageInfo_StatusRequest.Size(m)
}
func (m *StatusRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StatusRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StatusRequest proto.InternalMessageInfo

func (m *StatusRequest) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *StatusRequest) GetRepo() string {
	if m != nil {
		return m.Repo
	}
	return ""
}

func (m *StatusRequest) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *StatusRequest) GetPort() string {
	if m != nil {
		return m.Port
	}
	return ""
}

type StatusRecordsResponse struct {
	Owner                string            `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"`
	Repo                 string            `protobuf:"bytes,2,opt,name=repo,proto3" json:"repo,omitempty"`
	CollectedTimestamp   int64             `protobuf:"varint,3,opt,name=collected_timestamp,json=collectedTimestamp,proto3" json:"collected_timestamp,omitempty"`
	StatusMap            map[string]string `protobuf:"bytes,4,rep,name=status_map,json=statusMap,proto3" json:"status_map,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ResponseStatus       *ResponseStatus   `protobuf:"bytes,5,opt,name=response_status,json=responseStatus,proto3" json:"response_status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *StatusRecordsResponse) Reset()         { *m = StatusRecordsResponse{} }
func (m *StatusRecordsResponse) String() string { return proto.CompactTextString(m) }
func (*StatusRecordsResponse) ProtoMessage()    {}
func (*StatusRecordsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1510f1a05cee58cd, []int{2}
}

func (m *StatusRecordsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatusRecordsResponse.Unmarshal(m, b)
}
func (m *StatusRecordsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatusRecordsResponse.Marshal(b, m, deterministic)
}
func (m *StatusRecordsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatusRecordsResponse.Merge(m, src)
}
func (m *StatusRecordsResponse) XXX_Size() int {
	return xxx_messageInfo_StatusRecordsResponse.Size(m)
}
func (m *StatusRecordsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StatusRecordsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StatusRecordsResponse proto.InternalMessageInfo

func (m *StatusRecordsResponse) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *StatusRecordsResponse) GetRepo() string {
	if m != nil {
		return m.Repo
	}
	return ""
}

func (m *StatusRecordsResponse) GetCollectedTimestamp() int64 {
	if m != nil {
		return m.CollectedTimestamp
	}
	return 0
}

func (m *StatusRecordsResponse) GetStatusMap() map[string]string {
	if m != nil {
		return m.StatusMap
	}
	return nil
}

func (m *StatusRecordsResponse) GetResponseStatus() *ResponseStatus {
	if m != nil {
		return m.ResponseStatus
	}
	return nil
}

type StatusResponse struct {
	Owner                string          `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"`
	Repo                 string          `protobuf:"bytes,2,opt,name=repo,proto3" json:"repo,omitempty"`
	CollectedTimestamp   int64           `protobuf:"varint,3,opt,name=collected_timestamp,json=collectedTimestamp,proto3" json:"collected_timestamp,omitempty"`
	Status               string          `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	ResponseStatus       *ResponseStatus `protobuf:"bytes,5,opt,name=response_status,json=responseStatus,proto3" json:"response_status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *StatusResponse) Reset()         { *m = StatusResponse{} }
func (m *StatusResponse) String() string { return proto.CompactTextString(m) }
func (*StatusResponse) ProtoMessage()    {}
func (*StatusResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1510f1a05cee58cd, []int{3}
}

func (m *StatusResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatusResponse.Unmarshal(m, b)
}
func (m *StatusResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatusResponse.Marshal(b, m, deterministic)
}
func (m *StatusResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatusResponse.Merge(m, src)
}
func (m *StatusResponse) XXX_Size() int {
	return xxx_messageInfo_StatusResponse.Size(m)
}
func (m *StatusResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StatusResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StatusResponse proto.InternalMessageInfo

func (m *StatusResponse) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *StatusResponse) GetRepo() string {
	if m != nil {
		return m.Repo
	}
	return ""
}

func (m *StatusResponse) GetCollectedTimestamp() int64 {
	if m != nil {
		return m.CollectedTimestamp
	}
	return 0
}

func (m *StatusResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *StatusResponse) GetResponseStatus() *ResponseStatus {
	if m != nil {
		return m.ResponseStatus
	}
	return nil
}

type NodeRequest struct {
	Owner                string   `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"`
	Repo                 string   `protobuf:"bytes,2,opt,name=repo,proto3" json:"repo,omitempty"`
	Host                 string   `protobuf:"bytes,3,opt,name=host,proto3" json:"host,omitempty"`
	Port                 string   `protobuf:"bytes,4,opt,name=port,proto3" json:"port,omitempty"`
	Path                 string   `protobuf:"bytes,5,opt,name=path,proto3" json:"path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NodeRequest) Reset()         { *m = NodeRequest{} }
func (m *NodeRequest) String() string { return proto.CompactTextString(m) }
func (*NodeRequest) ProtoMessage()    {}
func (*NodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1510f1a05cee58cd, []int{4}
}

func (m *NodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeRequest.Unmarshal(m, b)
}
func (m *NodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeRequest.Marshal(b, m, deterministic)
}
func (m *NodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeRequest.Merge(m, src)
}
func (m *NodeRequest) XXX_Size() int {
	return xxx_messageInfo_NodeRequest.Size(m)
}
func (m *NodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NodeRequest proto.InternalMessageInfo

func (m *NodeRequest) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *NodeRequest) GetRepo() string {
	if m != nil {
		return m.Repo
	}
	return ""
}

func (m *NodeRequest) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *NodeRequest) GetPort() string {
	if m != nil {
		return m.Port
	}
	return ""
}

func (m *NodeRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

type NodeResponse struct {
	Owner                string          `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"`
	Repo                 string          `protobuf:"bytes,2,opt,name=repo,proto3" json:"repo,omitempty"`
	Path                 string          `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
	Node                 string          `protobuf:"bytes,4,opt,name=node,proto3" json:"node,omitempty"`
	ResponseStatus       *ResponseStatus `protobuf:"bytes,5,opt,name=response_status,json=responseStatus,proto3" json:"response_status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *NodeResponse) Reset()         { *m = NodeResponse{} }
func (m *NodeResponse) String() string { return proto.CompactTextString(m) }
func (*NodeResponse) ProtoMessage()    {}
func (*NodeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1510f1a05cee58cd, []int{5}
}

func (m *NodeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeResponse.Unmarshal(m, b)
}
func (m *NodeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeResponse.Marshal(b, m, deterministic)
}
func (m *NodeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeResponse.Merge(m, src)
}
func (m *NodeResponse) XXX_Size() int {
	return xxx_messageInfo_NodeResponse.Size(m)
}
func (m *NodeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NodeResponse proto.InternalMessageInfo

func (m *NodeResponse) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *NodeResponse) GetRepo() string {
	if m != nil {
		return m.Repo
	}
	return ""
}

func (m *NodeResponse) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *NodeResponse) GetNode() string {
	if m != nil {
		return m.Node
	}
	return ""
}

func (m *NodeResponse) GetResponseStatus() *ResponseStatus {
	if m != nil {
		return m.ResponseStatus
	}
	return nil
}

func init() {
	proto.RegisterType((*ResponseStatus)(nil), "ecflow_client.ResponseStatus")
	proto.RegisterType((*StatusRequest)(nil), "ecflow_client.StatusRequest")
	proto.RegisterType((*StatusRecordsResponse)(nil), "ecflow_client.StatusRecordsResponse")
	proto.RegisterMapType((map[string]string)(nil), "ecflow_client.StatusRecordsResponse.StatusMapEntry")
	proto.RegisterType((*StatusResponse)(nil), "ecflow_client.StatusResponse")
	proto.RegisterType((*NodeRequest)(nil), "ecflow_client.NodeRequest")
	proto.RegisterType((*NodeResponse)(nil), "ecflow_client.NodeResponse")
}

func init() { proto.RegisterFile("ecflow_client.proto", fileDescriptor_1510f1a05cee58cd) }

var fileDescriptor_1510f1a05cee58cd = []byte{
	// 456 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x54, 0x5d, 0x6b, 0xd4, 0x40,
	0x14, 0x35, 0x9b, 0x6d, 0xe9, 0xde, 0x74, 0x57, 0x99, 0xad, 0x12, 0x52, 0x0b, 0x31, 0xf8, 0x90,
	0xa7, 0x0a, 0xdb, 0x17, 0x11, 0xdf, 0xca, 0x8a, 0x2f, 0x16, 0x99, 0xf5, 0x51, 0x08, 0x63, 0x72,
	0x35, 0xc1, 0x6c, 0x26, 0xce, 0xcc, 0xb6, 0xf4, 0x47, 0xf8, 0x3f, 0xfc, 0x2f, 0xfa, 0xa3, 0x64,
	0xbe, 0xaa, 0x29, 0x2d, 0x5a, 0x58, 0x7d, 0xbb, 0xe7, 0xdc, 0x99, 0x73, 0x66, 0xce, 0xdc, 0x04,
	0xe6, 0x58, 0x7e, 0x6c, 0xf9, 0x45, 0x51, 0xb6, 0x0d, 0x76, 0xea, 0xb8, 0x17, 0x5c, 0x71, 0x32,
	0x1d, 0x90, 0xd9, 0x5b, 0x98, 0x51, 0x94, 0x3d, 0xef, 0x24, 0xae, 0x14, 0x53, 0x1b, 0x49, 0x0e,
	0x61, 0x52, 0x33, 0x59, 0xa0, 0x10, 0x5c, 0xc4, 0x41, 0x1a, 0xe4, 0x7b, 0x74, 0xaf, 0x66, 0x72,
	0xa9, 0x31, 0x79, 0x02, 0xfb, 0xa6, 0x51, 0x48, 0x25, 0x9a, 0xee, 0x53, 0x3c, 0x4a, 0x83, 0x7c,
	0x42, 0x23, 0xc3, 0xad, 0x0c, 0x95, 0x31, 0x98, 0x5a, 0x25, 0x8a, 0x5f, 0x36, 0x28, 0x15, 0x39,
	0x80, 0x1d, 0x7e, 0xd1, 0xa1, 0x15, 0x9b, 0x50, 0x0b, 0x08, 0x81, 0xb1, 0xc0, 0x9e, 0x3b, 0x05,
	0x53, 0x6b, 0xae, 0xe6, 0x52, 0xc5, 0xa1, 0xe5, 0x74, 0xad, 0xb9, 0x9e, 0x0b, 0x15, 0x8f, 0x2d,
	0xa7, 0xeb, 0xec, 0xc7, 0x08, 0x1e, 0x7a, 0x8f, 0x92, 0x8b, 0x4a, 0xfa, 0x2b, 0xdc, 0xc1, 0xeb,
	0x19, 0xcc, 0x4b, 0xde, 0xb6, 0x58, 0x2a, 0xac, 0x0a, 0xd5, 0xac, 0x51, 0x2a, 0xb6, 0xee, 0x8d,
	0x75, 0x48, 0xc9, 0x55, 0xeb, 0x9d, 0xef, 0x10, 0x0a, 0x20, 0x8d, 0x67, 0xb1, 0x66, 0x7d, 0x3c,
	0x4e, 0xc3, 0x3c, 0x5a, 0x9c, 0x1c, 0x0f, 0x23, 0xbe, 0xf1, 0x50, 0x8e, 0x7d, 0xc3, 0xfa, 0x65,
	0xa7, 0xc4, 0x25, 0x9d, 0x48, 0x8f, 0xc9, 0x2b, 0xb8, 0x2f, 0xdc, 0xaa, 0xc2, 0xb2, 0xf1, 0x4e,
	0x1a, 0xe4, 0xd1, 0xe2, 0xe8, 0x9a, 0xf0, 0xf0, 0x8d, 0xe8, 0x4c, 0x0c, 0x70, 0xf2, 0x12, 0x66,
	0x43, 0x13, 0xf2, 0x00, 0xc2, 0xcf, 0x78, 0xe9, 0x62, 0xd0, 0xa5, 0x8e, 0xe6, 0x9c, 0xb5, 0x1b,
	0x74, 0x29, 0x58, 0xf0, 0x62, 0xf4, 0x3c, 0xc8, 0xbe, 0x07, 0x7e, 0xfb, 0xff, 0xc8, 0xf1, 0x11,
	0xec, 0xba, 0xab, 0xda, 0x27, 0x75, 0x68, 0x5b, 0x59, 0x64, 0x12, 0xa2, 0x33, 0x5e, 0xe1, 0x3f,
	0x9b, 0x3e, 0xc3, 0x31, 0x55, 0x9b, 0xd3, 0x69, 0x8e, 0xa9, 0x3a, 0xfb, 0x16, 0xc0, 0xbe, 0x75,
	0xbd, 0x73, 0x80, 0x5e, 0x2e, 0xfc, 0x25, 0xa7, 0xb9, 0x8e, 0x57, 0xe8, 0x6d, 0x75, 0xbd, 0xad,
	0x7c, 0x16, 0x5f, 0x47, 0x30, 0x5f, 0x9a, 0x0d, 0xa7, 0x66, 0xfd, 0x0a, 0xc5, 0x79, 0x53, 0x22,
	0x79, 0x0f, 0x07, 0xa7, 0xf6, 0xb5, 0x06, 0x53, 0x4c, 0x1e, 0xdf, 0x32, 0xe3, 0x26, 0xde, 0xe4,
	0xe9, 0xdf, 0x7c, 0x01, 0xd9, 0x3d, 0x72, 0x06, 0xd3, 0x81, 0xfa, 0x1f, 0x64, 0x8f, 0x6e, 0xe9,
	0x5e, 0xe9, 0xbd, 0x86, 0xc8, 0xe9, 0xe9, 0xd8, 0x49, 0x72, 0x6d, 0xfd, 0x6f, 0x13, 0x90, 0x1c,
	0xde, 0xd8, 0xf3, 0x4a, 0x1f, 0x76, 0xcd, 0x7f, 0xf1, 0xe4, 0x67, 0x00, 0x00, 0x00, 0xff, 0xff,
	0xa9, 0x64, 0xdc, 0x58, 0x2e, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// EcflowClientServiceClient is the client API for EcflowClientService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type EcflowClientServiceClient interface {
	CollectStatusRecords(ctx context.Context, in *StatusRequest, opts ...grpc.CallOption) (*StatusRecordsResponse, error)
	CollectStatus(ctx context.Context, in *StatusRequest, opts ...grpc.CallOption) (*StatusResponse, error)
	CollectNode(ctx context.Context, in *NodeRequest, opts ...grpc.CallOption) (*NodeResponse, error)
}

type ecflowClientServiceClient struct {
	cc *grpc.ClientConn
}

func NewEcflowClientServiceClient(cc *grpc.ClientConn) EcflowClientServiceClient {
	return &ecflowClientServiceClient{cc}
}

func (c *ecflowClientServiceClient) CollectStatusRecords(ctx context.Context, in *StatusRequest, opts ...grpc.CallOption) (*StatusRecordsResponse, error) {
	out := new(StatusRecordsResponse)
	err := c.cc.Invoke(ctx, "/ecflow_client.EcflowClientService/CollectStatusRecords", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ecflowClientServiceClient) CollectStatus(ctx context.Context, in *StatusRequest, opts ...grpc.CallOption) (*StatusResponse, error) {
	out := new(StatusResponse)
	err := c.cc.Invoke(ctx, "/ecflow_client.EcflowClientService/CollectStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ecflowClientServiceClient) CollectNode(ctx context.Context, in *NodeRequest, opts ...grpc.CallOption) (*NodeResponse, error) {
	out := new(NodeResponse)
	err := c.cc.Invoke(ctx, "/ecflow_client.EcflowClientService/CollectNode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// EcflowClientServiceServer is the server API for EcflowClientService service.
type EcflowClientServiceServer interface {
	CollectStatusRecords(context.Context, *StatusRequest) (*StatusRecordsResponse, error)
	CollectStatus(context.Context, *StatusRequest) (*StatusResponse, error)
	CollectNode(context.Context, *NodeRequest) (*NodeResponse, error)
}

func RegisterEcflowClientServiceServer(s *grpc.Server, srv EcflowClientServiceServer) {
	s.RegisterService(&_EcflowClientService_serviceDesc, srv)
}

func _EcflowClientService_CollectStatusRecords_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EcflowClientServiceServer).CollectStatusRecords(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ecflow_client.EcflowClientService/CollectStatusRecords",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EcflowClientServiceServer).CollectStatusRecords(ctx, req.(*StatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EcflowClientService_CollectStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EcflowClientServiceServer).CollectStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ecflow_client.EcflowClientService/CollectStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EcflowClientServiceServer).CollectStatus(ctx, req.(*StatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EcflowClientService_CollectNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EcflowClientServiceServer).CollectNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ecflow_client.EcflowClientService/CollectNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EcflowClientServiceServer).CollectNode(ctx, req.(*NodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _EcflowClientService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ecflow_client.EcflowClientService",
	HandlerType: (*EcflowClientServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CollectStatusRecords",
			Handler:    _EcflowClientService_CollectStatusRecords_Handler,
		},
		{
			MethodName: "CollectStatus",
			Handler:    _EcflowClientService_CollectStatus_Handler,
		},
		{
			MethodName: "CollectNode",
			Handler:    _EcflowClientService_CollectNode_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ecflow_client.proto",
}
